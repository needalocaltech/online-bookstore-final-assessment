name: Python CI/CD Pipeline

on:
  # Triggers the workflow on push or pull request events
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test_and_lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Dependencies and Application Modules
      # CRITICAL FIX: Install the application and the test dependencies together.
      # This ensures 'app' and 'models' are correctly added to the PYTHONPATH
      # before pytest attempts to import them.
      run: |
        python -m pip install --upgrade pip
        
        # Install the application in editable mode using the current directory ('.')
        # This requires a setup.py or pyproject.toml file to be present.
        pip install -e .
        
        # Install testing tools from requirements.txt or directly
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pytest pytest-cov coverage

    - name: Run Tests and Generate Coverage Report
      # Run pytest from the root, relying on the 'pip install -e .' above 
      # to handle all pathing and imports.
      run: |
        pytest -q --cov=app --cov=models --cov-report=xml --cov-report=term tests/

    - name: Upload Coverage Report (Codecov)
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.xml
        fail_ci_if_error: true

    - name: Notify on Failure
      if: failure()
      run: echo "Tests failed! Check the run logs for details."
